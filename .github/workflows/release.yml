name: Flutter CI

# 创建触发打包条件：只要推送tag，就会触发版本打包

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main
env:
  CI_TEST: true
  # FORCE_JAVASCRIPT_ACTIONS_TO_NODE20: true

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: android
            os: ubuntu-22.04
            targets: apk,aab

          - platform: macos
            os: macos-13
            aarch: universal
            targets: dmg,pkg

          - platform: windows
            os: windows-2019
            aarch: amd64
            targets: exe,msix

          - platform: linux
            os: ubuntu-22.04
            aarch: amd64
            targets: appimage,deb,rpm
  
          # - platform: ios
          #   os: macos-14
          #   aarch: universal
          #   filename: fci-ios
          #   targets: ipa

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - run: node -v

      - name: Setup Flutter
        uses: kuhnroyal/flutter-fvm-config-action/config@v3
        id: fvm-config-action
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: 'stable'
          cache: true
      
      - name: Get flutter dependencies
        run: flutter pub get    
        
      - name: Install flutter_distributor
        run: dart pub global activate flutter_distributor

      - name: Setup Java
        if: startsWith(matrix.platform,'android')
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      # Build apk
      # - run: flutter build apk --target-platform android-arm
      # - run: flutter build apk --release --target-platform=android-arm64 --no-shrink
      # - run: flutter build ${{ matrix.targets }} --release --target-platform=android-arm64 --no-shrink
      
      - name: Build Android app
        if: startsWith(matrix.platform,'android')
        run: |
          flutter_distributor package --platform ${{ matrix.platform }} --targets ${{ matrix.targets }}

      - name: Build MacOS app
        if: startsWith(matrix.platform,'macos')
        run: |
          npm install -g appdmg
          flutter_distributor package --platform ${{ matrix.platform }} --targets ${{ matrix.targets }}

      - name: Build Windows app
        if: startsWith(matrix.platform,'windows')
        run: |
          flutter_distributor package --platform ${{ matrix.platform }} --targets ${{ matrix.targets }}

      - name: Build Linux app
        if: startsWith(matrix.platform,'linux')
        run: |
          sudo apt install rpm patchelf
          sudo apt install locate
          wget -O appimagetool "https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage"
          chmod +x appimagetool
          mv appimagetool /usr/local/bin/
          flutter_distributor package --platform ${{ matrix.platform }} --targets ${{ matrix.targets }}

      - name: Upload app
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: dist/*/*

      - name: Release app
        uses: ncipollo/release-action@v1.5.0
        with:
          # artifacts: "build/app/outputs/apk/release/*.apk"
          artifacts: dist/*/*
          token: ${{ secrets.GITHUB_TOKEN }}

    

